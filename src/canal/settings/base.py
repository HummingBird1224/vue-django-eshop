"""
Django settings for canal project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j)0p5e=+z8_49ajulsr#498(vp51oj=_c&2p%llxdnsd6b8%5l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    # third party apps
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'storages',
    'django_ses',
    'rest_framework',
    'sass_processor',
    'webpack_loader',
    'django_mysql',
    'django_extensions',
    # my apps
    'accounts',
    'billing',
    'carts',
    'core',
    'orders',
    'products',
    'external',
    'internal',
    'notices',
    'mydesign',
    'casestudies',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
]

ROOT_URLCONF = 'canal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'canal.libs.context_processors.render_notice_info'
            ],
            'builtins': [
                'canal.libs.templatetags',
            ],
        },
    },
]

WSGI_APPLICATION = 'canal.wsgi.application'

CSRF_COOKIE_NAME = 'csrftoken'

CSRF_COOKIE_SECURE = False

SESSION_COOKIE_SECURE = False

SECURE_SSL_REDIRECT = False

SECURE_BROWSER_XSS_FILTER = True

SECURE_CONTENT_TYPE_NOSNIFF = True

# SECURE_HSTS_SECONDS = 86400  # 1 day
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

CONN_MAX_AGE = 60

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = False

AUTH_USER_MODEL = 'accounts.User'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(
    os.path.dirname(BASE_DIR),
    'static_in_env', 'static_root'
)
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static_files', 'static'),
)

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(
    os.path.dirname(BASE_DIR),
    'static_in_env',
    'media_root'
)

WEBPACK_LOADER = {
   'DEFAULT': {
       'BUNDLE_DIR_NAME': 'bundles/',
       'STATS_FILE': os.path.join(BASE_DIR, 'frontend', 'webpack-stats.json'),
   }
}

# Sass/SCSS
SASS_PROCESSOR_AUTO_INCLUDE = False
SASS_PROCESSOR_ROOT = os.path.join(BASE_DIR, 'static_files', 'static')
SASS_PROCESSOR_INCLUDE_FILE_PATTERN = r'^.+\.scss$'
SASS_PRECISION = 8
SASS_OUTPUT_STYLE = 'compact'
SASS_TEMPLATE_EXTS = ['.html', '.haml']

# INTCOMMA
NUMBER_GROUPING = 3

# LOGIN_REDIRECT_URL = ""

# EMAIL BACKEND
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django_ses.SESBackend'
# EMAIL_BACKEND = 'django_smtp_ssl.SSLEmailBackend'
# EMAIL_HOST = 'email-smtp.us-west-2.amazonaws.com'
# EMAIL_HOST_USER = os.environ.get("CANAL_SMTP_USER")
# EMAIL_HOST_PASSWORD = os.environ.get("CANAL_SMTP_PASSWORD")
# EMAIL_PORT = 465
# EMAIL_USE_TLS = True

# All Auth
LOGIN_REDIRECT_URL = "/"
SITE_ID = 3
ACCOUNT_ADAPTER = 'accounts.adapter.CustomAccountAdapter'
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]
ACCOUNT_FORMS = {
    'signup': 'accounts.forms.SignupForm',
}
DEFAULT_FROM_EMAIL = "info@canal.ink"
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True

SOCIALACCOUNT_ADAPTER = 'external.adapters.SocialAccountAdapter'
SOCIALACCOUNT_QUERY_EMAIL = True
SOCIALACCOUNT_AUTO_SIGNUP = True
SOCIALACCOUNT_EMAIL_VERIFICATION = "none"
SOCIALACCOUNT_PROVIDERS = {
    'colorme': {
        'SCOPE': [
            'read_products',
            'read_sales',
        ]
    }
}

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_AUTHENTICATION_METHOD = 'email'
# ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3
ACCOUNT_EMAIL_CONFIRMATION_HMAC = True
ACCOUNT_EMAIL_VERIFICATION = 'optional'
# ACCOUNT_FORMS = {}
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 10
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = False
ACCOUNT_LOGIN_ON_PASSWORD_RESET = False
ACCOUNT_LOGOUT_REDIRECT_URL = "/"
ACCOUNT_LOGOUT_ON_GET = True

# REST FRAMEWORK
REST_FRAMEWORK = {
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 20,
}


# MY SETTINGS
SLACK_KEY = os.environ.get("CANAL_SLACK_KEY")

# AWS
AWS_ACCESS_KEY_ID = os.environ.get("CANAL_AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.environ.get("CANAL_AWS_SECRET_ACCESS_KEY")
AWS_SES_REGION_NAME = 'ap-northeast-1'
AWS_SES_REGION_ENDPOINT = 'email.ap-northeast-1.amazonaws.com'
# IF USING S3
AES_USE_S3 = os.environ.get('CANAL_USE_S3', None) == 'True'
if AES_USE_S3:
    AWS_DEFAULT_ACL = None
    AWS_STORAGE_BUCKET_NAME = os.environ.get("CANAL_AWS_STORAGE_BUCKET_NAME")
    AWS_S3_CUSTOM_DOMAIN = '{}.s3.amazonaws.com'.format(AWS_STORAGE_BUCKET_NAME)
    AWS_S3_OBJECT_PARAMETERS = {
        'CacheControl': 'max-age=86400',
    }
    AWS_S3_REGION_NAME = "ap-northeast-1"
    AWS_LOCATION = 'public/static'
    STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    DEFAULT_FILE_STORAGE = 'canal.storage_backends.MediaStorage'

# PAYJP
USE_PAYJP = os.environ.get("CANAL_USE_PAYJP")
PAYJP_API_KEY = os.environ.get("CANAL_PAYJP_API_KEY")

# PAYMENT
TAX_RATE = 0.1
PAYMENT_EXPIRY_DAYS = 14  # Expiry days for orders with no actions within this value
PAYJP_EXPIRY_DAYS = 60 # Expiry days for payjp charges.


# CELERY
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
# LIBRARY ERROR
CELERY_ENABLE_UTC = True
# CELERY_TIMEZONE = 'Asia/Tokyo'
CELERY_BROKER_URL = os.environ.get("CANAL_CELERY_BROKER_URL")
CELERY_RESULT_BACKEND = os.environ.get("CANAL_CELERY_RESULT_URL")
# CELERY_REDBEAT_REDIS_URL = "redis://localhost:6379/3"
# CELERY_BEAT_MAX_LOOP_INTERVAL = 5
# CELERY_REDBEAT_LOCK_TIMEOUT = 25

# COLORME
COLORME_CLIENT_ID = os.environ.get("CANAL_COLORME_CLIENT_ID")
COLORME_CLIENT_SECRET = os.environ.get("CANAL_COLORME_CLIENT_SECRET")
COLORME_REDIRECT_URI = os.environ.get("CANAL_COLORME_REDIRECT_URI")
